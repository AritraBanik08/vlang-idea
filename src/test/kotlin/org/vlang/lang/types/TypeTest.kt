package org.vlang.lang.types

class TypeTest : TypeTestBase() {
    fun `test primitives`() = doTestFile("primitives.v")
    fun `test tuples`() = doTestFile("tuples.v")
    fun `test loops`() = doTestFile("loops.v")
    fun `test conditional`() = doTestFile("conditional.v")
    fun `test unary`() = doTestFile("unary.v")
    fun `test if expression`() = doTestFile("if_expression.v")
    fun `test func type`() = doTestFile("func_type.v")
    fun `test type cast`() = doTestFile("type_cast.v")
    fun `test or block`() = doTestFile("or_block.v")
    fun `test arrays`() = doTestFile("arrays.v")
    fun `test constants`() = doTestFile("constants.v")
    fun `test if guard`() = doTestFile("if_guard.v")
    fun `test select`() = doTestFile("select.v")
    fun `test pointer`() = doTestFile("pointer.v")
    fun `test json decode`() = doTestWithBuiltin("json_decode.v")
    fun `test array methods`() = doTestWithBuiltin("array_methods.v")
    fun `test enum fetch`() = doTestFile("enum_fetch.v")
    fun `test sql`() = doTestFile("sql.v")
    fun `test globals`() = doTestFile("globals.v")
    fun `test fields`() = doTestFile("fields.v")
//    fun `test shared`() = doTestFile("shared.v")
    fun `test dump`() = doTestFile("dump.v")
    fun `test channels`() = doTestFile("channels.v")
}
